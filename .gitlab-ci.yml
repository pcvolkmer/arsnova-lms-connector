variables:
  OUTPUT_DIR: "*/build"
  GRADLE_USER_HOME: .gradle-user-home
  GRADLE_OPTS: -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false
  GRADLE_CLI_OPTS: --no-daemon --console=plain

.gradle:
  image: gradle:6.3-jdk8
  cache:
    key: gradle-global-cache
    paths:
      - $GRADLE_USER_HOME/caches

compile:
  extends: .gradle
  stage: build
  artifacts:
    paths:
      - $OUTPUT_DIR
  script:
    - gradle $GRADLE_CLI_OPTS assemble

unit_test:
  extends: .gradle
  stage: test
  dependencies:
    - compile
  artifacts:
    paths:
      - $OUTPUT_DIR/jacoco
      - $OUTPUT_DIR/reports
      - $OUTPUT_DIR/test-results
    reports:
      junit: $OUTPUT_DIR/test-results/test/TEST-*.xml
  coverage: '/Code coverage: \d+\.\d+/'
  script:
    - gradle $GRADLE_CLI_OPTS test jacocoTestReport -x compileJava -x classes -x jar
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print "Instructions covered:", covered, "/", instructions; print "Code coverage:", 100 * covered / instructions "%" }' $OUTPUT_DIR/reports/jacoco/test/jacocoTestReport.csv

maven_publish:
  extends: .gradle
  stage: deploy
  only:
    - master
    - /^v[0-9]+/
    - /^[0-9]+\.[0-9]+$/
  dependencies:
    - compile
  script:
    - gradle $GRADLE_CLI_OPTS publish -PgitlabHostUrl=$CI_SERVER_URL -PgitlabProjectId=$CI_PROJECT_ID -PgitlabAuthToken=$CI_JOB_TOKEN

docker_image:
  extends: .gradle
  stage: deploy
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - if: $CI_COMMIT_REF_NAME == "master"
      when: on_success
    - if: $CI_COMMIT_REF_NAME == "latest" || $CI_COMMIT_REF_NAME =~ /^v[0-9]+/ || $CI_COMMIT_REF_NAME =~ /^[0-9]+\.[0-9]+$/
      when: never
    - when: manual
  variables:
    DOCKER_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG
  dependencies:
    - compile
  allow_failure: true
  script:
    - "echo Creation time for image: `git log -1 --format=%cI`"
    - gradle $GRADLE_CLI_OPTS jib -x classes -x jar -x war
      -Djib.to.auth.username="$CI_REGISTRY_USER"
      -Djib.to.auth.password="$CI_REGISTRY_PASSWORD"
      -Djib.to.image="$DOCKER_IMAGE"
      -Djib.container.creationTime="`git log -1 --format=%cI`"
