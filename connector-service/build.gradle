plugins {
	id "jacoco"
	id "war"
	id "com.google.cloud.tools.jib" version "2.1.0"
	id "org.gretty" version "3.0.2"
	id "org.sonarqube" version "2.8"
}

jar {
	manifest {
		attributes 'Implementation-Title': 'Connector-Service', 'Implementation-Version': archiveVersion
	}
}

dependencies {
	implementation project(':connector-model')

	providedCompile platform(group: 'org.springframework.boot', name: 'spring-boot-dependencies', version: springBootVersion)

	implementation group: 'jakarta.annotation', name: 'jakarta.annotation-api'
	implementation group: 'commons-codec', name: 'commons-codec'
	implementation group: 'org.springframework', name: 'spring-context'
	implementation group: 'org.springframework', name: 'spring-webmvc'
	implementation group: 'org.springframework', name: 'spring-jdbc'
	implementation group: 'org.springframework.security', name: 'spring-security-web'
	implementation group: 'org.springframework.security', name: 'spring-security-config'
	implementation group: 'org.springframework.security', name: 'spring-security-ldap'
	implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310'
	implementation group: 'org.yaml', name: 'snakeyaml'
	implementation group: 'cglib', name: 'cglib', version: '3.3.0'
	implementation group: 'ch.qos.logback', name: 'logback-classic'
	implementation group: 'org.codehaus.janino', name: 'janino'
	implementation group: 'org.json', name: 'json', version: '20190722'

	providedCompile group: 'jakarta.servlet', name: 'jakarta.servlet-api'

	providedRuntime group: 'mysql', name: 'mysql-connector-java'

	testImplementation group: 'junit', name: 'junit'
	testImplementation group: 'org.mockito', name: 'mockito-core'
	testImplementation group: 'org.dbunit', name: 'dbunit', version: '2.7.0'
	testImplementation group: 'org.hsqldb', name: 'hsqldb'
}

test { systemProperties 'property': 'value' }

gretty {
	servletContainer = 'jetty9.4'
	logbackConfigFile = 'src/main/resources/logback.xml'
	jvmArgs = ['-Darsnova.log.level=DEBUG']
}

sonarqube {
	properties {
		property "sonar.sourceEncoding", "UTF-8"
		property "sonar.language", "java"
		property "sonar.jacoco.reportPath", "$buildDir/jacoco/test.exec"
		property "sonar.host.url", project.hasProperty('sonarServerUrl') ?  sonarServerUrl : ''
	}
}
